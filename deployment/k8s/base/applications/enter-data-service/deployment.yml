apiVersion: apps/v1
kind: Deployment
metadata:
  name: enter-data-service
  labels:
    app: enter-data-service
    component: frontend
    environment: development
spec:
replicas: 1
selector:
  matchLabels:
    app: enter-data-service
template:
  metadata:
    labels:
      app: enter-data-service
  spec:
    serviceAccountName: database-secrets-sa
    volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "database-secrets"
    containers:
    - name: enter-data-service
      image: mehrdadfordobadi/enter-data-service:latest
      volumeMounts:
      - name: secrets-store
        mountPath: "/mnt/secrets-store"
        readOnly: true
      env:
      - name: MYSQL_HOST
        value: "mysql.default.svc.cluster.local"
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            name: mysql-secrets
            key: MYSQL_USER_WRITER
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-secrets
            key: MYSQL_PASSWORD_WRITER
      - name: AUTH_SERVICE_HOST
        value: http://auth-service.default.svc.cluster.local:8000
      - name: AUTH_SERVICE_PORT
        value: "8000"
      ports:
      - containerPort: 8001 # must match target port for the service
      resources:
        requests:
          cpu: "50m"
          memory: "64Mi"
        limits:
          cpu: "100m"
          memory: "128Mi"
      livenessProbe:
        httpGet:
        path: /health
        port: 8001
        initialDelaySeconds: 15
        periodSeconds: 10
      readinessProbe:
        httpGet:
        path: /health/ready
        port: 8001
        initialDelaySeconds: 5
        periodSeconds: 10