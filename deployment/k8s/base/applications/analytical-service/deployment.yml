apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytical-service
  labels:
    app: analytical-service
    component: backend
    environment: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytical-service
  template:
    metadata:
      labels:
        app: analytical-service
    spec:
      serviceAccountName: database-secrets-sa
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "database-secrets"
      containers:
      - name: analytical-service
        image: mehrdadfordobadi/analytical-service:latest
        volumeMounts:
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
        env:
          # MongoDB connection (using service discovery)
        - name: MONGO_URI
          value: "mongodb://$(MONGO_USER_WRITER):$(MONGO_PASSWORD_WRITER)@mongodb.default.svc.cluster.local:27017/analyticsdb"
        - name: MONGO_USER_WRITER
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: MONGO_USER_WRITER
        - name: MONGO_PASSWORD_WRITER
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: MONGO_PASSWORD_WRITER
          # MySQL connection
        - name: MYSQL_HOST
          value: "mysql.default.svc.cluster.local"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_USER_READER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_PASSWORD_READER
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10