apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      serviceAccountName: database-secrets-sa
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "database-secrets"
      - name: init-script
        configMap:
          name: mongodb-config
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        # Using values from mounted AWS secrets via k8s secrets
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: MONGO_INITDB_DATABASE
        # Pass reader/writer passwords to init script
        - name: MONGO_PASSWORD_READER
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: MONGO_PASSWORD_READER
        - name: MONGO_PASSWORD_WRITER
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: MONGO_PASSWORD_WRITER
        volumeMounts:
        - name: mongodb-persistent-storage
          mountPath: /data/db
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
        resources:
          requests:
            cpu: "500m"     
            memory: "512Mi" 
          limits:
            cpu: "1000m"     
            memory: "1Gi"  
        livenessProbe:
          exec:
            command: ["mongosh", "--eval", "db.adminCommand('ping')"]
          initialDelaySeconds: 30
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: mongodb-persistent-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "gp2"
      resources:
        requests:
          storage: 10Gi